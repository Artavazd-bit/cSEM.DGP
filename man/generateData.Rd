% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generateData.R
\name{generateData}
\alias{generateData}
\title{Generate data from a lavaan model syntax}
\usage{
generateData(
 .model                    = NULL,
 .empirical                = FALSE,
 .handle_negative_definite = c("stop", "ignore"),
 .return_type              = c("data.frame", "matrix", "cor"),
 .N                        = 200,
 ...
 )
}
\arguments{
\item{.model}{A model in \link[lavaan:model.syntax]{lavaan model syntax}.}

\item{.empirical}{Logical. If TRUE, mu and Sigma of the normal distribution
specify the empirical not the population mean and covariance matrix.}

\item{.handle_negative_definite}{Character string. How should negative definite
indicator correlation matrices be handled? One of \code{"stop"} or \code{"ignore"} in which case
an \code{NA} is produced. Defaults to \code{"stop"}.}

\item{.return_type}{Character string. One of \code{"data.frame"}, \code{matrix} or \code{"cor"}
in which case the indicator correlation matrix is returned. Defaults to \code{".data.frame"}.}

\item{.N}{Integer. The number of observations to generate. Ignored if
\code{return.type = "cor"}. Defaults to \code{200}.}

\item{...}{\code{"name" = values} pairs. \code{"name"} is a character value giving the
label used for the parameter of interest. \code{values} is a numeric vector of
values to use for the paramter given by \code{"name"}.}
}
\value{
The generated data. Either as a data.frame (\code{return_type = "data.frame"}),
a numeric matrix (\code{return.type = "matrix"}),
or a correlation matrix (\code{return.type = "cor"}).
}
\description{
Generates data based on the parameters of a structural equation model
in \link[lavaan:model.syntax]{lavaan model syntax}.
}
\details{
Generate data for structural equation models including up to 8 constructs. Generation
is based on parameter values given in \href{http://lavaan.ugent.be/tutorial/syntax1.html}{lavaan model syntax}.

For the structural model, values are path coeffcients. For the measurement
model values in each equation are taken to be loadings, if the concept is modeled as a
common factor (\code{=~}). If the concept is modeled as a composite (\code{<~}) values are
interpreted as weights!
In this case the correlation between indicators needs to
be set as well. See the example below.

In addition to supplying numeric values, variable values for parameters are allowed.
To achieve this, the package makes use of \href{http://lavaan.ugent.be/}{lavaan}'s
labeling capabilities. Users may replace a given parameter in, i.e. the structural model
by a symbolic name and assign a vector of values to that name. These values will be used
to generate data for all possible combinations of these values with the remaining fixed parameters.

If \code{.return_type} is \code{"data.frame"} or \code{"matrix"} normally distributed data
is generated based on the indicator correlation matrix which would be
returned if \code{.return_type = "cor"}.
}
\examples{
## Model with only common factors
model <- "
# Structural model
eta2 ~ gamma*eta1
eta3 ~ 0.4*eta1 + 0.35*eta2

# Measurement model
eta1 =~ lambda*y11 + 0.9*y12 + 0.8*y13
eta2 =~ 0.7*y21 + 0.7*y22 + 0.9*y23
eta3 =~ 0.9*y31 + 0.8*y32 + 0.7*y33
"

dat <- generateData(model,
                       "gamma" = c(0.3, 0.6),
                       "lambda" = c(0.8, 0.85, 0.9), .N = 10)
dat[1:3]

## If the model contains composites, within-block indicator correlation
   needs to be set as well.
   Here too, variable values may be used

model <- "
# Structural model
eta2 ~ 0.2*eta1
eta3 ~ 0.4*eta1 + 0.35*eta2

# Measurement model
eta1 <~ 0.7*y11 + 0.9*y12 + 0.8*y13
eta2 =~ 0.7*y21 + 0.7*y22 + 0.9*y23
eta3 =~ 0.9*y31 + 0.8*y32 + 0.7*y33

# Within block indicator correlation
y11 ~~ 0.2*y12
y11 ~~ 0.3*y13
y12 ~~ epsilon*y13
"

dat <- generateData(model, "epsilon" = c(0.1, 0.2, 0.3), .return_type = "cor")
dat
}
